version: '3.9'

services:
  redis:
    image: redis:latest
    container_name: crypto_redis_cache
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports: 
      - 6379:6379
    volumes:
      - redisdata:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - crypto_watcher_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    container_name: crypto_postgres_db
    restart: unless-stopped
    ports:
      - 12001:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PG_DSN: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - crypto_watcher_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]      
      interval: 10s
      timeout: 5s
      retries: 5
  fetcher:
    build:
      context: ./fetcher
    container_name: fetcher_container
    restart: unless-stopped
    ports:
      - 8000:8000
    depends_on:
      - postgres
    working_dir: /fetcher/app
    volumes:
      - ./fetcher:/fetcher/app
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      PG_DSN: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
    networks:
      - crypto_watcher_network
    command: ["python3", "fetcher.py"]

  app:
    build: 
      context: ./app
    container_name: app_container
    restart: unless-stopped
    ports:
      - 8001:8001
    depends_on:
      - postgres
      - redis
    working_dir: /app/app
    volumes:
      - ./app:/app/app
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      PG_DSN: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
    networks:
      - crypto_watcher_network
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8001"]
    
volumes:
  pgdata:
  redisdata:

networks:
  crypto_watcher_network:
